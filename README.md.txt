# Application de Gestion de Tr√©sorerie

Application web pour la gestion simple des finances (entr√©es/sorties) d'une tr√©sorerie, con√ßue initialement pour une √©glise mais adaptable √† toute petite organisation.

![Aper√ßu de l'application](lien_vers_une_capture_d_ecran.png) 
<!-- Prenez une capture d'√©cran de votre application et ajoutez-la au dossier pour un rendu plus pro -->

## ‚ú® Fonctionnalit√©s

-   **Tableau de bord** : Vue d'ensemble des soldes par cat√©gorie et par devise (USD, CDF).
-   **Gestion des Entr√©es** : Ajout, modification et suppression des entr√©es financi√®res.
-   **Gestion des Sorties** : Ajout, modification et suppression des d√©penses.
-   **Rapports d'Inventaire** : Calcul de la variance (solde) sur des p√©riodes filtrables (ann√©e, mois).
-   **Authentification S√©curis√©e** : Connexion et r√©initialisation de mot de passe.
-   **Interface Moderne** : Design √©pur√© et facile √† utiliser.

## üõ†Ô∏è Technologies Utilis√©es

-   **Front-End** : HTML5, CSS3, JavaScript (Vanilla JS)
-   **Back-End** : Node.js, Express.js (ou l'outil que vous utilisez)
-   **Base de donn√©es** : SQLite, PostgreSQL, MySQL (pr√©cisez celle que vous utilisez)

## üöÄ Comment Lancer le Projet

Ce projet est compos√© d'un front-end (client) et d'un back-end (serveur). Vous devez lancer les deux pour que l'application fonctionne.

### Pr√©requis

-   Avoir [Node.js](https://nodejs.org/) install√©.
-   Avoir une base de donn√©es (pr√©cisez laquelle) install√©e et configur√©e.

### 1. Installation

Clonez ce d√©p√¥t sur votre machine locale :
```bash
git clone https://github.com/VOTRE_NOM_UTILISATEUR/gestion-tresorerie-eglise.git
cd gestion-tresorerie-eglise
```

### 2. Configuration du Back-End (Serveur)

1.  Allez dans le dossier du back-end :
    ```bash
    cd backend
    ```

2.  Installez les d√©pendances :
    ```bash
    npm install
    ```

3.  Configurez vos variables d'environnement. Cr√©ez un fichier `.env` √† la racine du dossier `backend` et remplissez-le selon le mod√®le de votre API (par exemple, les informations de connexion √† la base de donn√©es).

4.  Lancez le serveur :
    ```bash
    npm start
    ```
    Le serveur devrait maintenant tourner sur `http://localhost:3000` (ou le port que vous avez d√©fini).

### 3. Lancement du Front-End (Client)

Ouvrez simplement le fichier `frontend/index.html` dans votre navigateur web pr√©f√©r√© (Google Chrome, Firefox, etc.).

L'application est maintenant pr√™te √† √™tre utilis√©e ! Elle communiquera automatiquement avec le serveur que vous avez lanc√© localement.

---

## üåê D√©ploiement (Optionnel)

Pour rendre l'application accessible en ligne, vous devez d√©ployer :
1.  Le **back-end** sur un service comme Render, Heroku ou un VPS.
2.  Le **front-end** sur un service d'h√©bergement statique comme GitHub Pages, Vercel ou Netlify.

N'oubliez pas de mettre √† jour la variable `API_BASE_URL` dans le fichier `frontend/index.html` avec l'URL de votre API d√©ploy√©e.